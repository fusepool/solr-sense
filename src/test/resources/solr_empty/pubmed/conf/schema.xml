<?xml version="1.0" encoding="UTF-8" ?>

<schema name="pubmed" version="1.5">
 <fields>
	<field name="_version_" type="string" indexed="true" stored="true" multiValued="false"/>
	
	
  <field name="id" type="string" indexed="true" stored="true" required="true"/>
  <field name="title"     type="text_general_rev"     indexed="true" stored="true"/>
  <field name="body"     type="text_general_rev"     indexed="true" stored="true" termVectors="true"/>
  <field name="year"    type="int"    indexed="true" stored="true"/>
  <field name="keywords"   type="commaDelimited"    indexed="true" stored="true" multiValued="true"/>
  <field name="journal-title"        type="string"  indexed="true" stored="true"/>
  <field name="category"     type="string" indexed="true" stored="true" multiValued="false"/>

  <field name="title_ngram"     type="ngram_field"     indexed="true" stored="false"/>
  <field name="title_word_complete" type="word_complete" indexed="true" stored="true" multiValued="true" />
  <field name="keywords_word_complete" type="word_complete" indexed="true" stored="true" multiValued="true" />
  <field name="authors_word_complete" type="word_complete" indexed="true" stored="true" multiValued="true" />
  <field name="all_word_complete" type="word_complete" indexed="true" stored="true" multiValued="true" />

  <field name="title_phrase_complete" type="phrase_complete" indexed="true" stored="true" multiValued="true" />
  <field name="keywords_phrase_complete" type="phrase_complete" indexed="true" stored="true" multiValued="true" />
  <field name="authors_phrase_complete" type="phrase_complete" indexed="true" stored="true" multiValued="true" />
  <field name="all_phrase_complete" type="phrase_complete" indexed="true" stored="true" multiValued="true" />

  <field name="authors" type="string" indexed="true" stored="true" multiValued="true"/>
  

  <field name="title_autocomplete" type="text_autocomplete" indexed="true" stored="true" omitNorms="true" omitTermFreqAndPositions="true"/>
  <field name="all_autocomplete" type="text_autocomplete" indexed="true" stored="true" multiValued="true" omitNorms="true" omitTermFreqAndPositions="true"/>

	<field name="content_srch" type="text_general_rev" indexed="true" stored="true" multiValued="true" termVectors="true" omitTermFreqAndPositions="false"/>
	<field name="meta_srch" type="text_general_rev" indexed="true" stored="true" multiValued="true" termVectors="true" omitTermFreqAndPositions="false"/>
 </fields>


 <uniqueKey>id</uniqueKey>

<copyField source="title" dest="content_srch" />
<copyField source="body" dest="content_srch" />
<copyField source="year" dest="meta_srch" />
<copyField source="keywords" dest="meta_srch" />
<copyField source="journal-title" dest="meta_srch" />
<copyField source="category" dest="meta_srch" />


<copyField source="title" dest="title_word_complete" />
<copyField source="title" dest="title_ngram"/>
<copyField source="keywords" dest="keywords_word_complete" />

<copyField source="authors" dest="authors_word_complete" />
<copyField source="title" dest="all_word_complete" />
<copyField source="keywords" dest="all_word_complete" />
<copyField source="authors" dest="all_word_complete" />

<copyField source="title" dest="title_phrase_complete" />
<copyField source="keywords" dest="keywords_phrase_complete" />
<copyField source="authors" dest="authors_phrase_complete" />
<copyField source="title" dest="all_phrase_complete" />
<copyField source="keywords" dest="all_phrase_complete" />
<copyField source="authors" dest="all_phrase_complete" />

<copyField source="title" dest="title_autocomplete" />

<copyField source="title" dest="all_autocomplete" />
<copyField source="body" dest="all_autocomplete" />
<copyField source="keywords" dest="all_autocomplete" />
<copyField source="authors" dest="all_autocomplete" />

  <types>
   
    <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" />

    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/> 

    <!--
      Default numeric field types. For faster range queries, consider the tint/tfloat/tlong/tdouble types.
    -->
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>
 	

	<fieldType name="ngram_field" class="solr.TextField">
		<analyzer type="index">
			<tokenizer class="solr.LowerCaseTokenizerFactory" />
			<filter class="solr.ShingleFilterFactory"  minShingleSize="2" maxShingleSize="8"/>
		</analyzer>
		<analyzer type="query">
			<tokenizer class="solr.LowerCaseTokenizerFactory"/>
			<filter class="solr.ShingleFilterFactory" minShingleSize="2" maxShingleSize="5"/>
		</analyzer>
	</fieldType>
	
	<fieldType name="text_autocomplete" class="solr.TextField" positionIncrementGap="100">
	  <analyzer type="index">
	    <tokenizer class="solr.WhitespaceTokenizerFactory"/>
	    <filter class="solr.LowerCaseFilterFactory"/>
	    <filter class="solr.EdgeNGramFilterFactory" minGramSize="1" maxGramSize="25" />
	  </analyzer>
	  <analyzer type="query">
	    <tokenizer class="solr.WhitespaceTokenizerFactory"/>
	    <filter class="solr.LowerCaseFilterFactory"/>
	  </analyzer>
	</fieldType>

    <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="tdate" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>


    <!-- A text field that only splits on whitespace for exact matching of words -->
    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      </analyzer>
    </fieldType>


    <fieldType name="text_meta" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>


	<fieldType name="commaDelimited" class="solr.TextField">
	      <analyzer>
	        <tokenizer class="solr.PatternTokenizerFactory" pattern=",\s*" />
	      </analyzer>
	</fieldType>
	
	<fieldType class="solr.TextField" name="word_complete" positionIncrementGap="100">
	 <analyzer>
	  <tokenizer class="solr.WhitespaceTokenizerFactory"/>
	  <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
	  <filter class="solr.LowerCaseFilterFactory"/>
	 </analyzer>
	</fieldType>

	<fieldType class="solr.TextField" name="phrase_complete">
	 <analyzer>
	  <tokenizer class="solr.KeywordTokenizerFactory"/>
	  <filter class="solr.LowerCaseFilterFactory"/>
	 </analyzer>
	</fieldType>

    <!-- A text field with defaults appropriate for English, plus
	 aggressive word-splitting and autophrase features enabled.
	 This field is just like text_en, except it adds
	 WordDelimiterFilter to enable splitting and matching of
	 words on case-change, alpha numeric boundaries, and
	 non-alphanumeric chars.  This means certain compound word
	 cases will work, for example query "wi fi" will match
	 document "WiFi" or "wi-fi".
        -->
    <fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <!-- Case insensitive stop word removal.
          add enablePositionIncrements=true in both the index and query
          analyzers to leave a 'gap' for more accurate phrase queries.
        -->
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="lang/stopwords_en.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="lang/stopwords_en.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- Just like text_general except it reverses the characters of
	 each token, to enable more efficient leading wildcard queries. -->
    <fieldType name="text_general_rev" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.ReversedWildcardFilterFactory" withOriginal="true"
           maxPosAsterisk="3" maxPosQuestion="2" maxFractionAsterisk="0.33"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
 </types>
</schema>